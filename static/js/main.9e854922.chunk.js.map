{"version":3,"sources":["Listitems.js","App.js","reportWebVitals.js","index.js"],"names":["Listitems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newitem","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA4CeA,MApCf,SAAmBC,GACf,IACMC,EADOD,EAAME,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACP,kCAAI,uBAAOC,KAAM,OAChBC,GAAIH,EAAKI,IACTC,MAAQL,EAAKM,KACbC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAI7C,+BACI,cAAC,IAAD,CAAiBH,UAAW,UAC5BU,KAAM,QACNC,QACK,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAdFJ,EAAKI,QAuB/C,OACG,8BACI,cAAC,IAAD,CAAUU,SAAW,IAAKC,OAAQ,cAAlC,SACClB,O,eC/BZmB,IAAQC,IAAIC,K,IAwFGC,E,kDAtFb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAO,CACVtB,MAAO,GACPuB,YAAY,CACVf,KAAM,GACNF,IAAK,KAKT,EAAKkB,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAdD,E,+CAgBlB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAa,CACXf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,qBAMhB,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GAAoB,KAAjBS,EAAQxB,KAAY,CACrB,IAAMyB,EAAS,GAAD,mBAAMN,KAAKL,MAAMtB,OAAjB,CAAwBgC,IACtCL,KAAKC,SAAS,CACZ5B,MAAOiC,EACPV,YAAY,CACVf,KAAM,GACNF,IAAK,S,wBAUb,SAAWA,GACT,IAAM4B,EAAgBP,KAAKL,MAAMtB,MAAMmC,QAAO,SAAAjC,GAAI,OAAIA,EAAKI,MAAMA,KACjEqB,KAAKC,SAAS,CACZ5B,MAAMkC,M,uBAGV,SAAU1B,EAAKF,GACb,IAAMN,EAAO2B,KAAKL,MAAMtB,MACxBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAMA,MAGfmB,KAAKC,SAAS,CACZ5B,MAAOA,M,oBAKX,WACE,OACE,sBAAKG,UAAW,MAAhB,UACE,6CACA,iCACA,uBAAME,GAAI,aAAa+B,SAAUT,KAAKD,QAAtC,UACE,uBAAOtB,KAAM,OAAOiC,YAAY,aAAa9B,MAAOoB,KAAKL,MAAMC,YAAYf,KAAMC,SAAUkB,KAAKH,cAChG,wBAAQpB,KAAM,SAAd,0BAIJ,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAC/Be,WAAaY,KAAKZ,WAClBJ,UAAagB,KAAKhB,mB,GA/EN2B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9e854922.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Listitem.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n //import './Listitems.css';\r\n\r\n\r\n\r\nfunction Listitems(props){\r\n    const items= props.items;\r\n    const listItems= items.map(item =>\r\n        {\r\n           return <div className=\"list\" key= {item.key}>\r\n           <p> <input type= \"text\" \r\n            id={item.key}\r\n            value= {item.text}\r\n            onChange = {\r\n                (e) =>{\r\n                    props.setUpdate(e.target.value,item.key)\r\n                }\r\n            }\r\n            />\r\n           <span>\r\n               <FontAwesomeIcon className= \"faicons\" \r\n               icon= 'trash'\r\n               onClick= {\r\n                    () => props.deleteItem(item.key)}\r\n                />\r\n               </span>\r\n\r\n            </p> \r\n           \r\n               \r\n         </div>\r\n        })\r\n    return(\r\n       <div>\r\n           <FlipMove duration= {300} easing= \"ease-in-out\"> \r\n           {listItems}\r\n           </FlipMove>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Listitems;\r\n","\nimport './App.css';\nimport React from 'react';\nimport Listitems from './Listitems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      items: [],\n      currentItem:{\n        text: '',\n        key: ''\n\n      }\n      \n    }\n    this.handleInput= this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e){\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n\n    })\n\n  }\n  addItem(e){\n    e.preventDefault();\n    const newitem = this.state.currentItem;\n    \n    if(newitem.text !== \"\"){\n      const newItems= [...this.state.items, newitem];\n      this.setState({\n        items: newItems,\n        currentItem:{\n          text: '',\n          key: ''\n        }\n      })\n\n      \n\n    }\n    \n\n  }\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n  }\n  setUpdate(text,key){\n    const items= this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n   \n  }\n\n  render(){\n    return(\n      <div className =\"App\">\n        <p> TO DO LIST </p>\n        <header> \n        <form id =\"to-do-form\" onSubmit={this.addItem}>\n          <input type= \"text\" placeholder=\"Enter text\" value={this.state.currentItem.text} onChange={this.handleInput} />\n          <button type= \"submit\"> Click </button>\n          </form>\n      </header>\n\n      <Listitems items = {this.state.items}\n      deleteItem= {this.deleteItem}\n      setUpdate = {this.setUpdate}>\n      </Listitems>\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}